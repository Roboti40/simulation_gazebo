<?xml version="1.0"?>

<launch>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/willowgarage.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/> <!-- Inert - see gazebo_ros_pkgs issue #491 -->
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>


  <!-- robot urdf load -->
  <param name="robot_description"
    command="$(find xacro)/xacro '$(find fuji_mecanum)/test/test_robot.urdf.xacro' --inorder" />

  <node name="robot_state_publisher"
        pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen" />

  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find fuji_mecanum)/config/controller.yaml" />

  <!-- Spawn controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
        args="joint_state_controller front_right_controller front_left_controller rear_right_controller rear_left_controller" />

  <!-- Spawn robot in gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
      args="-x -2.0 -y -2.0 -z 1.0
            -unpause
            -urdf
            -model robot
            -param robot_description" 
      respawn="false" 
      output="screen" />
      
  <!-- lancement du fichier python de controle du robot avec cmd_vel -->      
  <node pkg="fuji_mecanum" type="test_mecanum_robot.py" name="cmdVelCB"/>
  
	<node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
	<param name="destination_frame" value="base_link"/>
	<param name="scan_destination_topic" value="/scan"/>
	<param name="laserscan_topics" value ="/lidar_front /lidar_rear" /> <!-- LIST OF THE LASER SCAN TOPICS TO SUBSCRIBE -->
	<param name="angle_min" value="-3.14"/>
	<param name="angle_max" value="3.14"/>
	<param name="angle_increment" value="0.0058"/>
	<param name="scan_time" value="0.0333333"/>
	<param name="range_min" value="0.30"/>
	<param name="range_max" value="50.0"/>
  </node>
  
  <!-- lancement du node odom --> 
  <node pkg="fuji_mecanum" type="remap_to_odom.py" name="model_states_to_odom" output="screen">
  <param name="model_name" value="robot"/>
  </node>
  
  <arg name="geotiff_map_file_path" default="$(find hector_geotiff)/maps"/>

  <param name="/use_sim_time" value="true"/>

  <node pkg="rviz" type="rviz" name="rviz"
    args="-d $(find hector_slam_launch)/rviz_cfg/mapping_demo.rviz"/>

  <include file="$(find hector_mapping)/launch/mapping_default.launch"/>

  <include file="$(find hector_geotiff_launch)/launch/geotiff_mapper.launch">
    <arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
    <arg name="map_file_path" value="$(arg geotiff_map_file_path)"/>
  </include>

<node pkg="hector_costmap" type="hector_costmap" name="hector_costmap" output="screen" respawn="false">
    <param name="cost_map_topic" value="cost_map" />
    <param name="map_frame_id" value="map" />
    <param name="local_transform_frame_id" value="base_footprint" />
    <param name="initial_free_cells_radius" value="0.3" />
    <param name="update_radius" value="4.0"/>
    <param name="costmap_pub_freq" value="4.0" />
    <param name="sys_msg_topic" value="syscommand" />

    <param name="use_grid_map" value="true" />
    <param name="grid_map_topic" value="scanmatcher_map" />

    <param name="use_elevation_map" value="true" />
    <param name="elevation_map_topic" value="elevation_map_local" />

    <param name="use_cloud_map" value="false" />
    <param name="cloud_topic" value="openni/depth/points" />

<!-- Not necessary to set, set by dynamic reconfigure -->
    <!--param name="max_delta_elevation" value="0.08"/-->
    <!--param name="allow_elevation_map_to_clear_occupied_cells" value="true" /-->
    <!--param name="max_clear_size" value="4" /-->
    <!--param name="slize_min_height" value="0.3" /-->
    <!--param name="slize_max_height" value="0.4" /-->
<!-- Not necessary to set, set by scanmatcher -->
    <!--param name="map_resolution" value="0.05" /-->
    <!--param name="max_grid_size_x" value="1024" /-->
    <!--param name="max_grid_size_y" value="1024" /-->
<!-- Not necessary to set, set by elvation_mapping -->
    <!-- param name="elevation_resolution" value="0.01" / -->
</node>

  <node pkg="hector_driving_aid_markers" type="hector_driving_aid_markers_node" name="hector_driving_aid_markers" output="screen">
    <param name="left_side_y_outer" value="0.3"/>
    <param name="left_side_y_inner" value="0.25"/>
    <param name="right_side_y_outer" value="-0.3"/>
    <param name="right_side_y_inner" value="-0.25"/>
    <param name="offset_z" value="-0.05"/>    
  </node>

<node pkg="nodelet" type="nodelet" name="ElevationMapping" args="load hector_elevation_mapping/ElevationMapping openni_nodelet_manager" output="screen">
    <param name="elevation_resolution" value="0.01" />
    <param name="elevation_zero_level" value="16384" />
    <param name="min_observable_elevation" value="-1.0" />
    <param name="max_observable_elevation" value="0.5" />
    <param name="max_observable_distance" value="4.0" /> 
    <param name="sensor_variance" value="0.001" />   
    <param name="map_frame_id" value="map" />
    <param name="local_map_frame_id" value="base_stabilized" />
    <param name="local_elevation_map_topic" value="elevation_map_local" />
    <param name="gloabl_elevation_map_topic" value="elevation_map_global" />
    <param name="point_cloud_topic" value="openni/depth/points"/>
    <param name="grid_map_topic" value="scanmatcher_map"/>
    <param name="sys_msg_topic" value="syscommand" />
    <param name="publish_poseupdate" value="false" />
    <param name="poseupdate_pub_period" value="1.0" />
    <param name="poseupdate_height_covariance" value="0.25" />
    <param name="poseupdate_used_pattern_size" value="3" />
<!-- Not necessary to set, set by scanmatcher -->
    <!--param name="map_resolution" value="0.05" /-->
    <!--param name="max_grid_size_x" value="1024" /-->
    <!--param name="max_grid_size_y" value="1024" /-->
</node>

<node pkg="hector_elevation_mapping" type="ElevationMappingNode" name="ElevationMapping_1"  output="screen">
    <param name="elevation_resolution" value="0.01" />
    <param name="elevation_zero_level" value="16384" />
    <param name="min_observable_elevation" value="-1.0" />
    <param name="max_observable_elevation" value="0.5" />
    <param name="max_observable_distance" value="4.0" /> 
    <param name="sensor_variance" value="0.001" />   
    <param name="map_frame_id" value="map" />
    <param name="local_map_frame_id" value="base_stabilized" />
    <param name="local_elevation_map_topic" value="elevation_map_local" />
    <param name="gloabl_elevation_map_topic" value="elevation_map_global" />
    <param name="point_cloud_topic" value="openni/depth/points"/>
    <param name="grid_map_topic" value="scanmatcher_map"/>
    <param name="sys_msg_topic" value="syscommand" />
    <param name="publish_poseupdate" value="false" />
    <param name="poseupdate_pub_period" value="1.0" />
    <param name="poseupdate_height_covariance" value="0.25" />
    <param name="poseupdate_used_pattern_size" value="3" />
<!-- Not necessary to set, set by scanmatcher -->
    <!--param name="map_resolution" value="0.05" /-->
    <!--param name="max_grid_size_x" value="1024" /-->
    <!--param name="max_grid_size_y" value="1024" /-->
</node>

  <node pkg="hector_elevation_visualization" type="hector_elevation_visualization_node" name="hector_elevation_visualization_node" output="screen" respawn="false">
    <param name="max_height_levels" value="10" />
    <param name="max_height" value="1.0" />
    <param name="elevation_map_frame_id" value="/elevation_map_local" />
    <param name="sys_msg_topic" value="/syscommand" />
  </node>

<node pkg="hector_exploration_node" type="exploration_planner_node" name="hector_exploration_node" output="screen">
    <rosparam file="$(find hector_exploration_node)/config/costmap.yaml" command="load" />
</node>




</launch>
